---
title: "Databricks and pins"
format: html
editor: visual
---

## Load data

```{r}
#| include: false
library(tidymodels)
library(tidyverse)
library(sparklyr)
```


```{r}
library(sparklyr)

sc <- spark_connect(method = "databricks_connect")
```


```{r}
library(tidyverse)

tbl_lending <- tbl(sc, I("sol_eng_demo_nickp.`end-to-end`.loans_full_schema"))

tbl_lending
```


```{r}
local_lending <- tbl_lending |> 
  sample_n(1000) |> 
  collect()

local_lending
```


```{r}
library(tidymodels)

set.seed(1234)

clean_lending <- local_lending |> 
  select(
    interest_rate, paid_total, 
    paid_interest, paid_late_fees, annual_income,
    accounts_opened_24m, num_satisfactory_accounts,
    current_accounts_delinq, current_installment_accounts
    ) 

train_test_split <- initial_split(clean_lending)
lend_train <- training(train_test_split)
lend_test <- testing(train_test_split)

red_rec_obj <- recipe(interest_rate ~ ., data = lend_train) |>
  step_zv(all_predictors()) |>   
  step_filter_missing(all_numeric_predictors()) |> 
  step_normalize(all_numeric_predictors()) |>
  step_impute_mean(all_numeric_predictors())

lend_linear <- linear_reg()

lend_linear_wflow <- workflow() |>
  add_model(lend_linear) |>
  add_recipe(red_rec_obj)

lend_linear_fit <- lend_linear_wflow |>
  fit(data = lend_train)

lend_linear_fit

```

```{r}
preds <- predict(lend_linear_fit, lend_test) 

preds |> 
  ggplot() +
  geom_histogram(aes(.pred))
  
```

```{r}
library(pins)
board <- board_databricks("/Volumes/sol_eng_demo_nickp/end-to-end/r-models")
pin_write(board, lend_linear_fit, "lending-model-linear")
```


```{r}
meta <- pin_meta(board, "lending-model-linear")

url_pin <- paste(board$folder_url, "lending-model-linear", meta$local$version, meta$file, sep = "/")

url_pin
```

```{r}
lending_predict <- function(local_lending) {
  library(tidymodels)
  library(tidyverse)
  library(pins)
  url_pin <- "/Volumes/sol_eng_demo_nickp/end-to-end/r-models/lending-model-linear/20250421T150450Z-321f3/lending-model-linear.rds"
  if(file.exists(url_pin)) {
    model <- readRDS(url_pin)  
  } else {
    board <- board_databricks("/Volumes/sol_eng_demo_nickp/end-to-end/r-models")
    model <- pin_read(board, "lending-model-linear")
  }
  preds <- predict(model, local_lending)
  local_lending |> 
    bind_cols(preds) |> 
    select(56, interest_rate, everything())
}
```

```{r}
lending_predict(local_lending) 
```


